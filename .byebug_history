exit
empty_list.nth_from_end(1)
nth_from_end(1)
empty_list = LinkedList.new
exit
continue
last_node
exit
num
exit
w
exit
print n
return n
count = length
exit
n
length - count
length - count == n
count =1 
count = 0
length 
exit
length - n == 0
length -= 1
length - 1
last_node = last_node.next_node
length - n == 0
length - 1
last_node = last_node.next_node
length - n == 0
length
exit
length
exit
length - n == 0
n
length - n == 0
last_node = last_node.next_node
length - 1
last_node = last_node.next_node
length - n == 0
length = length + 1
length
length + n
length - n
length - last_node
count = 0
length = last_node.size(last_node)
last_node
exit
last_node
last_node.size(last_node)
length = last_node.size(last_node)
length
n
head.value
head
last_node.next_node
exit
last_node.size(last_node)
exit
last_node.size(last_node)
exit
last_node.size(last_node)
exit
last_node = last_node.next_node
last_node.next_node
last_node
exit
last_node.size(last_node)
continue
last_node.size(last_node)
continue
last_node.size(last_node)
continue
last_node.size(last_node)
exit
n
